version: "2"
services:
  onlyoffice-documentserver:
    image: onlyoffice/documentserver:${SOFTWARE_VERSION_TAG}
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      #- JWT_ENABLED=true
      #- JWT_SECRET=secret
      #- JWT_HEADER=Authorization
      #- JWT_IN_BODY=true
    ports:
      - "172.17.0.1:19543:80"
      # - "443:443"
    stdin_open: true
    restart: always
    stop_grace_period: 60s
    volumes:
      - ./storage/data:/var/www/onlyoffice/Data
      - ./storage/log:/var/log/onlyoffice
      - ./storage/cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
      - ./storage/files:/var/www/onlyoffice/documentserver-example/public/files
      - ./storage/fonts:/usr/share/fonts

  rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: rabbitmq
    restart: always
    expose:
      - "5672"

  postgres:
    container_name: onlyoffice-postgresql
    image: postgres:12
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      # - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: always
    expose:
      - "5432"
    volumes:
      - ./postgresql_data:/var/lib/postgresql
